source("Data analysis/BDG functions.R")
source("Agriculture functions.R")
data.raw = read.csv("dataset_original.csv", encoding = "UTF-8")
source("R scripts/Agriculture functions.R")
source("Agriculture functions.R")
data.raw = read.csv("dataset_original.csv", encoding = "UTF-8")
View(data.raw)
data.raw = read.csv("dataset_original.csv", encoding = "UTF-8") %>% filter(product %in% c("butter, cheddar"))
data.raw = read.csv("dataset_original.csv", encoding = "UTF-8")
View(data.raw)
View(data.raw)
data.raw = read.csv("dataset_original.csv", encoding = "UTF-8")%>% filter(product == "butter")
data.raw = read.csv("dataset_original.csv", encoding = "UTF-8")%>% filter(product == "butter" | product =="cheddar")
View(data.raw)
View(data.raw)
data.raw$millisSinceEpoch = as.numeric(as.character(data.raw$millisSinceEpoch))
View(data.raw)
data.raw = read.csv("dataset_original.csv", encoding = "UTF-8")%>% filter(product == "butter" | product =="cheddar")
options(scipen=999)
data.raw$millisSinceEpoch = as.numeric(as.character(data.raw$millisSinceEpoch))
data = data.raw %>% order_by(product)
data = data.raw %>% order(product)
data = data.raw %>% arrange(asc(product))
data = data.raw %>% arrange(ascending(product))
data = data.raw %>% arrange(desc(product))
View(data)
data = data.raw %>% arrange(ascend(product))
data = data.raw %>% arrange(asc(product))
data = data.raw %>% arrange(asce(product))
data = data.raw %>% arrange(ascen(product))
data = data.raw %>% arrange(product)
View(data)
data = data.raw %>% arrange(millisSinceEpoch,country,product)
View(data)
data = data.raw %>% arrange(product,country,millisSinceEpoch)
save.csv(data, "data_original.csv")
source("Agriculture functions.R")
data.raw = read.csv("data_original.csv", encoding = "UTF-8")
View(data.raw)
source("Agriculture functions.R")
data = read.csv("data_original.csv", encoding = "UTF-8")
# Save product names
products = data.frame(product = unique(data$product))
View(products)
save.json(products, "../Visual DSS/private/products.json")
# Predict prices
data.prediction = predict.all(data, c(seq(0.50, 0.95, 0.05), 0.99), 3, 60, "prediction")
View(data.prediction)
save.json(data.prediction, "../Visual DSS/private/dataset_predicted.json")
source("Agriculture functions.R")
data = read.csv("data_original.csv", encoding = "UTF-8")
# Save product names
products = data.frame(product = unique(data$product))
save.json(products, "../Visual DSS/private/products.json")
# Predict prices
data.prediction = predict.all(data, c(seq(0.50, 0.95, 0.05), 0.99), 3, 60, "prediction")
save.json(data.prediction, "../Visual DSS/private/dataset_predicted.json")
View(data.prediction)
